import pandas as pd
import matplotlib.pyplot as plt
# 1. Line Chart of the Number of Titles Released per Year
data_py = r.data
# Group data by year and count number of titles
counts = data_py.groupby("release_year")["title"].count()
# Create line chart
plt.figure(figsize=(20,10))
plt.plot(counts.index, counts.values)
# Add labels and title
plt.xlabel("Year")
plt.ylabel("Number of Titles Released")
plt.title("Number of Titles Released per Year")
# Display chart
plt.show()
import pandas as pd
import matplotlib.pyplot as plt
# 1. Line Chart of the Number of Titles Released per Year
data_py = r.data
# Group data by year and count number of titles
counts = data_py.groupby("release_year")["title"].count()
# Create line chart
plt.figure(figsize=(20,10))
plt.plot(counts.index, counts.values)
# Add labels and title
plt.xlabel("Year")
plt.ylabel("Number of Titles Released")
plt.title("Number of Titles Released per Year")
# Display chart
plt.show()
import pandas as pd
import matplotlib.pyplot as plt
# 1. Line Chart of the Number of Titles Released per Year
data_py = r.data
# Group data by year and count number of titles
counts = data_py.groupby("release_year")["title"].count()
# Create line chart
plt.figure(figsize=(20,10))
plt.plot(counts.index, counts.values)
# Add labels and title
plt.xlabel("Year")
plt.ylabel("Number of Titles Released")
plt.title("Number of Titles Released per Year")
# Display chart
plt.show()
import pandas as pd
import matplotlib.pyplot as plt
# 1. Line Chart of the Number of Titles Released per Year
data_py = r.data
# Group data by year and count number of titles
counts = data_py.groupby("release_year")["title"].count()
# Create line chart
plt.figure(figsize=(20,10))
plt.plot(counts.index, counts.values)
# Add labels and title
plt.xlabel("Year")
plt.ylabel("Number of Titles Released")
plt.title("Number of Titles Released per Year")
# Display chart
plt.show()
import pandas as pd
import matplotlib.pyplot as plt
data = pd.read_csv("data/streaming_titles_clean.csv")
print(len(data))
# print(data.columns)
data.tail()
import pandas as pd
import matplotlib.pyplot as plt
data = pd.read_csv("data/streaming_titles_clean.csv")
print(len(data))
# print(data.columns)
data.tail()
import pandas as pd
import matplotlib.pyplot as plt
data = pd.read_csv("data/streaming_titles_clean.csv")
import pandas as pd
import matplotlib.pyplot as plt
data = pd.read_csv("streaming_titles_clean.csv")
print(len(data))
# print(data.columns)
data.tail()
import pandas as pd
import matplotlib.pyplot as plt
data = pd.read_csv("~/Documents/GitHub/TV-Popularity-Project/Data/data")
print(len(data))
# print(data.columns)
data.tail()
import pandas as pd
import matplotlib.pyplot as plt
data = pd.read_csv("~/Documents/GitHub/TV-Popularity-Project/Data/data/streaming_titles_clean.csv")
print(len(data))
# print(data.columns)
data.tail()
import pandas as pd
import matplotlib.pyplot as plt
data = pd.read_csv("~/Documents/GitHub/TV-Popularity-Project/Data/data/streaming_titles_clean.csv")
print(len(data))
# print(data.columns)
data.tail()
# 1. Line Chart of the Number of Titles Released per Year
# Group data by year and count number of titles
counts = data.groupby("release_year")["title"].count()
# Create line chart
plt.figure(figsize=(20,10))
plt.plot(counts.index, counts.values)
# Add labels and title
plt.xlabel("Year")
plt.ylabel("Number of Titles Released")
plt.title("Number of Titles Released per Year")
# Display chart
plt.show()
import pandas as pd
import matplotlib.pyplot as plt
data = pd.read_csv("~/Documents/GitHub/TV-Popularity-Project/Data/data/streaming_titles_clean.csv")
print(len(data))
# print(data.columns)
data.tail()
# 1. Line Chart of the Number of Titles Released per Year
# Group data by year and count number of titles
counts = data.groupby("release_year")["title"].count()
# Create line chart
plt.figure(figsize=(20,10))
plt.plot(counts.index, counts.values)
# Add labels and title
plt.xlabel("Year")
plt.ylabel("Number of Titles Released")
plt.title("Number of Titles Released per Year")
# Display chart
plt.show()
# 2. Histogram of the Distribution of Content Ratings
# Create histogram of content ratings
plt.figure(figsize=(20,10))
plt.hist(data["rating"].dropna(), bins=10)
# Add labels and title
plt.xlabel("Content Rating")
plt.xticks(rotation=45)
plt.ylabel("Frequency")
plt.title("Distribution of Content Ratings")
# Display chart
plt.show()
# 3. Bar Chart of the Number of Titles per Country (count > 10)
# Extract first country from country column
chart = data.copy()
chart["country"] = chart["country"].str.split(", ").str[0]
# Group data by country and count number of titles
counts = chart.groupby("country")["title"].count()
counts = counts[counts > 10].sort_values(ascending=False)
# Create bar chart
plt.figure(figsize=(20,10))
plt.bar(counts.index, counts.values)
# Add labels and title
plt.xlabel("Country")
plt.xticks(rotation=90)
plt.ylabel("Number of Titles")
plt.title("Number of Titles per Country")
# Display chart
plt.show()
# 4. Movie and Rating Scatter Plot
# Filter out TV shows and missing ratings
movies = data[(data["type"] == "Movie") & (data["score"].notnull())]
# Create scatter plot of IMDB rating vs. runtime
plt.figure(figsize=(20,10))
plt.scatter(movies["score"], movies["duration"], alpha=0.5)
# Add labels and title
plt.xlabel("IMDB Rating")
plt.ylabel("Runtime (minutes)")
plt.title("IMDB Rating vs. Runtime for Movies on Streaming Services")
# Display chart
plt.show()
# 5. TV Show and Rating Scatter Plot
# Filter out Movies and missing ratings
tv = data[(data["type"] == "TV Show") & (data["score"].notnull())]
# Create scatter plot of IMDB rating vs. runtime
plt.figure(figsize=(20,10))
plt.scatter(tv["score"], tv["duration"], alpha=0.5)
# Add labels and title
plt.xlabel("IMDB Rating")
plt.ylabel("Runtime (seasons)")
plt.title("IMDB Rating vs. Runtime for Movies on Streaming Services")
# Display chart
plt.show()
import pandas as pd
import matplotlib.pyplot as plt
data = r.data
print(len(data))
# print(data.columns)
data.tail()
import pandas as pd
import matplotlib.pyplot as plt
data = r.data
print(len(data))
data.head()
data.isna().sum()
data.isna().sum(); df.shape
data.isna().sum(); data.shape
data.isna().sum(); print(data.shape); data.columns
data.isna().sum(); print(data.shape)
import seaborn as sns
sns.countplot(x=data["type"])
data.isna().sum(); print(data.shape)
import seaborn as sns
sns.countplot(x=data["type"])
import seaborn as sns
sns.countplot(x=data["type"]);
import seaborn as sns
ax = sns.countplot(x=data["type"])
ax.show()
import seaborn as sns
asx = sns.countplot(x=data["type"])
asx.show()
import seaborn as sns
sns.countplot(x=data["type"])
# 1. Line Chart of the Number of Titles Released per Year
# Group data by year and count number of titles
counts = data.groupby("release_year")["title"].count()
# Create line chart
plt.figure(figsize=(20,10))
plt.plot(counts.index, counts.values)
# Add labels and title
plt.xlabel("Year")
plt.ylabel("Number of Titles Released")
plt.title("Number of Titles Released per Year")
# Display chart
plt.show()
import pandas as pd
import matplotlib.pyplot as plt
data = r.data
print("The number of rows in the data set is " + len(data))
data.head()
import pandas as pd
import matplotlib.pyplot as plt
data = r.data
print("The number of rows in the data set is " + 8)
data.head()
import pandas as pd
import matplotlib.pyplot as plt
data = r.data
print("The number of rows in the data set is " + str(len(data)))
data.head()
# 2. Histogram of the Distribution of Content Ratings
# Create histogram of content ratings
plt.figure(figsize=(20,10))
plt.hist(data["rating"].dropna(), bins=10)
# Add labels and title
plt.xlabel("Content Rating")
plt.xticks(rotation=45)
plt.ylabel("Frequency")
plt.title("Distribution of Content Ratings")
# Display chart
plt.show()
# 2. Histogram of the Distribution of Content Ratings
# Create histogram of content ratings
plt.figure(figsize=(20,10))
plt.hist(data["rating"].dropna(), bins=10)
# Add labels and title
plt.xlabel("Content Rating")
plt.xticks(rotation=45)
plt.ylabel("Frequency")
plt.title("Distribution of Content Ratings")
# Display chart
plt.show();
# 6. Top 15 Genres By Number of Titles
# Get list of genre columns
genre_cols = [col for col in data.columns if col.startswith("genre")]
# Sum the number of true values in each genre column to get the total number of titles for each genre
genre_counts = data[genre_cols].sum()#.sort_values(ascending=False)
# Get the top 10 genres by number of titles
top_genres = genre_counts[:15]
# Remove "genre." from the genre names in the x-axis labels
labels = [col.replace("genre.", "") for col in top_genres.index]
# Create bar chart
plt.figure(figsize=(20, 10))
plt.bar(labels, top_genres.values, color='purple')
# Add labels and title
plt.xlabel("Genre")
plt.xticks(rotation=45, ha='right')
plt.ylabel("Number of Titles")
plt.title("Top 10 Genres by Number of Titles")
# Display chart
plt.show()
